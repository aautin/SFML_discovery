# Use Ubuntu 20.04 for better GLIBC compatibility (GLIBC 2.31)
FROM ubuntu:20.04

# Set timezone to avoid interactive prompts
ENV TZ=Europe/Paris
ENV DEBIAN_FRONTEND=noninteractive

# Install dependencies
RUN apt-get update && \
    apt-get install -y \
    g++ \
    git \
    wget \
    libx11-dev \
    libxcursor-dev \
    libxrandr-dev \
    libudev-dev \
    libopenal-dev \
    libvorbis-dev \
    libflac-dev \
    libxext-dev \
    libxi-dev \
    libgl1-mesa-dev \
    libfreetype6-dev \
    libxcb1-dev \
    libxrender-dev \
    libxfixes-dev \
    libxau-dev \
    libxdmcp-dev \
    libbsd-dev \
    libmd-dev && \
    rm -rf /var/lib/apt/lists/*

# Install CMake 3.25 (newer version required by SFML)
RUN apt-get update && \
    apt-get install -y gnupg software-properties-common && \
    wget -O - https://apt.kitware.com/keys/kitware-archive-latest.asc 2>/dev/null | apt-key add - && \
    echo 'deb https://apt.kitware.com/ubuntu/ focal main' | tee /etc/apt/sources.list.d/kitware.list >/dev/null && \
    apt-get update && \
    apt-get install -y cmake && \
    rm -rf /var/lib/apt/lists/*

# Set the working directory
WORKDIR /app

# Copy the source code into the container
COPY . .

# Build the project
RUN cmake -S . -B build -DCMAKE_BUILD_TYPE=Release && \
    cmake --build build --target my_game -j$(nproc)

# Ensure the executable has the correct permissions
RUN chmod +x /app/build/bin/my_game
